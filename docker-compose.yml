services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-net
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped  

  app:
    build:
      context: ./app
    container_name: app
    ports:
      - "8000:8000"
    networks:
      - app-net
    depends_on:
      - postgres
    env_file:
      - .env
    restart: unless-stopped  

  proxy:
    build:
      context: ./proxy
    container_name: proxy
    networks:
      - app-net
    depends_on:
      - app
    ports:
      - "8080:8080"
    env_file:
      - .env
    restart: unless-stopped  

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - app-net
    restart: unless-stopped  

  client:
    build:
      context: ./client
    container_name: client
    networks:
      - app-net
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - proxy
    restart: unless-stopped  

networks:
  app-net:
    driver: bridge

volumes:
  db-data:
